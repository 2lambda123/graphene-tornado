# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import Message as google___protobuf___message___Message

from google.protobuf.timestamp_pb2 import (
    Timestamp as google___protobuf___timestamp_pb2___Timestamp,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Mapping as typing___Mapping,
    MutableMapping as typing___MutableMapping,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import Literal as typing_extensions___Literal

class Trace(google___protobuf___message___Message):
    class CachePolicy(google___protobuf___message___Message):
        class Scope(int):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            @classmethod
            def Name(cls, number: int) -> str: ...
            @classmethod
            def Value(cls, name: str) -> Trace.CachePolicy.Scope: ...
            @classmethod
            def keys(cls) -> typing___List[str]: ...
            @classmethod
            def values(cls) -> typing___List[Trace.CachePolicy.Scope]: ...
            @classmethod
            def items(
                cls,
            ) -> typing___List[typing___Tuple[str, Trace.CachePolicy.Scope]]: ...

        UNKNOWN = typing___cast(Scope, 0)
        PUBLIC = typing___cast(Scope, 1)
        PRIVATE = typing___cast(Scope, 2)

        scope = ...  # type: Trace.CachePolicy.Scope
        max_age_ns = ...  # type: int
        def __init__(
            self,
            scope: typing___Optional[Trace.CachePolicy.Scope] = None,
            max_age_ns: typing___Optional[int] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Trace.CachePolicy: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self, field_name: typing_extensions___Literal["max_age_ns", "scope"]
            ) -> None: ...
        else:
            def ClearField(
                self, field_name: typing_extensions___Literal[b"max_age_ns", b"scope"]
            ) -> None: ...

    class Details(google___protobuf___message___Message):
        class VariablesJsonEntry(google___protobuf___message___Message):
            key = ...  # type: typing___Text
            value = ...  # type: typing___Text
            def __init__(
                self,
                key: typing___Optional[typing___Text] = None,
                value: typing___Optional[typing___Text] = None,
            ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> Trace.Details.VariablesJsonEntry: ...
            def MergeFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            def CopyFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            if sys.version_info >= (3,):
                def ClearField(
                    self, field_name: typing_extensions___Literal["key", "value"]
                ) -> None: ...
            else:
                def ClearField(
                    self, field_name: typing_extensions___Literal[b"key", b"value"]
                ) -> None: ...

        class VariablesEntry(google___protobuf___message___Message):
            key = ...  # type: typing___Text
            value = ...  # type: bytes
            def __init__(
                self,
                key: typing___Optional[typing___Text] = None,
                value: typing___Optional[bytes] = None,
            ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> Trace.Details.VariablesEntry: ...
            def MergeFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            def CopyFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            if sys.version_info >= (3,):
                def ClearField(
                    self, field_name: typing_extensions___Literal["key", "value"]
                ) -> None: ...
            else:
                def ClearField(
                    self, field_name: typing_extensions___Literal[b"key", b"value"]
                ) -> None: ...

        raw_query = ...  # type: typing___Text
        operation_name = ...  # type: typing___Text
        @property
        def variables_json(
            self,
        ) -> typing___MutableMapping[typing___Text, typing___Text]: ...
        @property
        def variables(self) -> typing___MutableMapping[typing___Text, bytes]: ...
        def __init__(
            self,
            variables_json: typing___Optional[
                typing___Mapping[typing___Text, typing___Text]
            ] = None,
            variables: typing___Optional[typing___Mapping[typing___Text, bytes]] = None,
            raw_query: typing___Optional[typing___Text] = None,
            operation_name: typing___Optional[typing___Text] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Trace.Details: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    "operation_name", "raw_query", "variables", "variables_json"
                ],
            ) -> None: ...
        else:
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    b"operation_name", b"raw_query", b"variables", b"variables_json"
                ],
            ) -> None: ...

    class Error(google___protobuf___message___Message):
        message = ...  # type: typing___Text
        time_ns = ...  # type: int
        json = ...  # type: typing___Text
        @property
        def location(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            Trace.Location
        ]: ...
        def __init__(
            self,
            message: typing___Optional[typing___Text] = None,
            location: typing___Optional[typing___Iterable[Trace.Location]] = None,
            time_ns: typing___Optional[int] = None,
            json: typing___Optional[typing___Text] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Trace.Error: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    "json", "location", "message", "time_ns"
                ],
            ) -> None: ...
        else:
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    b"json", b"location", b"message", b"time_ns"
                ],
            ) -> None: ...

    class HTTP(google___protobuf___message___Message):
        class Method(int):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            @classmethod
            def Name(cls, number: int) -> str: ...
            @classmethod
            def Value(cls, name: str) -> Trace.HTTP.Method: ...
            @classmethod
            def keys(cls) -> typing___List[str]: ...
            @classmethod
            def values(cls) -> typing___List[Trace.HTTP.Method]: ...
            @classmethod
            def items(cls) -> typing___List[typing___Tuple[str, Trace.HTTP.Method]]: ...

        UNKNOWN = typing___cast(Method, 0)
        OPTIONS = typing___cast(Method, 1)
        GET = typing___cast(Method, 2)
        HEAD = typing___cast(Method, 3)
        POST = typing___cast(Method, 4)
        PUT = typing___cast(Method, 5)
        DELETE = typing___cast(Method, 6)
        TRACE = typing___cast(Method, 7)
        CONNECT = typing___cast(Method, 8)
        PATCH = typing___cast(Method, 9)

        class Values(google___protobuf___message___Message):
            value = (
                ...
            )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
            def __init__(
                self,
                value: typing___Optional[typing___Iterable[typing___Text]] = None,
            ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> Trace.HTTP.Values: ...
            def MergeFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            def CopyFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            if sys.version_info >= (3,):
                def ClearField(
                    self, field_name: typing_extensions___Literal["value"]
                ) -> None: ...
            else:
                def ClearField(
                    self, field_name: typing_extensions___Literal[b"value"]
                ) -> None: ...

        class RequestHeadersEntry(google___protobuf___message___Message):
            key = ...  # type: typing___Text
            @property
            def value(self) -> Trace.HTTP.Values: ...
            def __init__(
                self,
                key: typing___Optional[typing___Text] = None,
                value: typing___Optional[Trace.HTTP.Values] = None,
            ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> Trace.HTTP.RequestHeadersEntry: ...
            def MergeFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            def CopyFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            if sys.version_info >= (3,):
                def HasField(
                    self, field_name: typing_extensions___Literal["value"]
                ) -> bool: ...
                def ClearField(
                    self, field_name: typing_extensions___Literal["key", "value"]
                ) -> None: ...
            else:
                def HasField(
                    self, field_name: typing_extensions___Literal["value", b"value"]
                ) -> bool: ...
                def ClearField(
                    self, field_name: typing_extensions___Literal[b"key", b"value"]
                ) -> None: ...

        class ResponseHeadersEntry(google___protobuf___message___Message):
            key = ...  # type: typing___Text
            @property
            def value(self) -> Trace.HTTP.Values: ...
            def __init__(
                self,
                key: typing___Optional[typing___Text] = None,
                value: typing___Optional[Trace.HTTP.Values] = None,
            ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> Trace.HTTP.ResponseHeadersEntry: ...
            def MergeFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            def CopyFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            if sys.version_info >= (3,):
                def HasField(
                    self, field_name: typing_extensions___Literal["value"]
                ) -> bool: ...
                def ClearField(
                    self, field_name: typing_extensions___Literal["key", "value"]
                ) -> None: ...
            else:
                def HasField(
                    self, field_name: typing_extensions___Literal["value", b"value"]
                ) -> bool: ...
                def ClearField(
                    self, field_name: typing_extensions___Literal[b"key", b"value"]
                ) -> None: ...

        method = ...  # type: Trace.HTTP.Method
        host = ...  # type: typing___Text
        path = ...  # type: typing___Text
        status_code = ...  # type: int
        secure = ...  # type: bool
        protocol = ...  # type: typing___Text
        @property
        def request_headers(
            self,
        ) -> typing___MutableMapping[typing___Text, Trace.HTTP.Values]: ...
        @property
        def response_headers(
            self,
        ) -> typing___MutableMapping[typing___Text, Trace.HTTP.Values]: ...
        def __init__(
            self,
            method: typing___Optional[Trace.HTTP.Method] = None,
            host: typing___Optional[typing___Text] = None,
            path: typing___Optional[typing___Text] = None,
            request_headers: typing___Optional[
                typing___Mapping[typing___Text, Trace.HTTP.Values]
            ] = None,
            response_headers: typing___Optional[
                typing___Mapping[typing___Text, Trace.HTTP.Values]
            ] = None,
            status_code: typing___Optional[int] = None,
            secure: typing___Optional[bool] = None,
            protocol: typing___Optional[typing___Text] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Trace.HTTP: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    "host",
                    "method",
                    "path",
                    "protocol",
                    "request_headers",
                    "response_headers",
                    "secure",
                    "status_code",
                ],
            ) -> None: ...
        else:
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    b"host",
                    b"method",
                    b"path",
                    b"protocol",
                    b"request_headers",
                    b"response_headers",
                    b"secure",
                    b"status_code",
                ],
            ) -> None: ...

    class Location(google___protobuf___message___Message):
        line = ...  # type: int
        column = ...  # type: int
        def __init__(
            self,
            line: typing___Optional[int] = None,
            column: typing___Optional[int] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Trace.Location: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self, field_name: typing_extensions___Literal["column", "line"]
            ) -> None: ...
        else:
            def ClearField(
                self, field_name: typing_extensions___Literal[b"column", b"line"]
            ) -> None: ...

    class Node(google___protobuf___message___Message):
        response_name = ...  # type: typing___Text
        index = ...  # type: int
        original_field_name = ...  # type: typing___Text
        type = ...  # type: typing___Text
        parent_type = ...  # type: typing___Text
        start_time = ...  # type: int
        end_time = ...  # type: int
        @property
        def cache_policy(self) -> Trace.CachePolicy: ...
        @property
        def error(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            Trace.Error
        ]: ...
        @property
        def child(
            self,
        ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
            Trace.Node
        ]: ...
        def __init__(
            self,
            response_name: typing___Optional[typing___Text] = None,
            index: typing___Optional[int] = None,
            original_field_name: typing___Optional[typing___Text] = None,
            type: typing___Optional[typing___Text] = None,
            parent_type: typing___Optional[typing___Text] = None,
            cache_policy: typing___Optional[Trace.CachePolicy] = None,
            start_time: typing___Optional[int] = None,
            end_time: typing___Optional[int] = None,
            error: typing___Optional[typing___Iterable[Trace.Error]] = None,
            child: typing___Optional[typing___Iterable[Trace.Node]] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Trace.Node: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def HasField(
                self,
                field_name: typing_extensions___Literal[
                    "cache_policy", "id", "index", "response_name"
                ],
            ) -> bool: ...
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    "cache_policy",
                    "child",
                    "end_time",
                    "error",
                    "id",
                    "index",
                    "original_field_name",
                    "parent_type",
                    "response_name",
                    "start_time",
                    "type",
                ],
            ) -> None: ...
        else:
            def HasField(
                self,
                field_name: typing_extensions___Literal[
                    "cache_policy",
                    b"cache_policy",
                    "id",
                    b"id",
                    "index",
                    b"index",
                    "response_name",
                    b"response_name",
                ],
            ) -> bool: ...
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    b"cache_policy",
                    b"child",
                    b"end_time",
                    b"error",
                    b"id",
                    b"index",
                    b"original_field_name",
                    b"parent_type",
                    b"response_name",
                    b"start_time",
                    b"type",
                ],
            ) -> None: ...

        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["id", b"id"]
        ) -> typing_extensions___Literal["response_name", "index"]: ...

    class QueryPlanNode(google___protobuf___message___Message):
        class SequenceNode(google___protobuf___message___Message):
            @property
            def nodes(
                self,
            ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
                Trace.QueryPlanNode
            ]: ...
            def __init__(
                self,
                nodes: typing___Optional[typing___Iterable[Trace.QueryPlanNode]] = None,
            ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> Trace.QueryPlanNode.SequenceNode: ...
            def MergeFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            def CopyFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            if sys.version_info >= (3,):
                def ClearField(
                    self, field_name: typing_extensions___Literal["nodes"]
                ) -> None: ...
            else:
                def ClearField(
                    self, field_name: typing_extensions___Literal[b"nodes"]
                ) -> None: ...

        class ParallelNode(google___protobuf___message___Message):
            @property
            def nodes(
                self,
            ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
                Trace.QueryPlanNode
            ]: ...
            def __init__(
                self,
                nodes: typing___Optional[typing___Iterable[Trace.QueryPlanNode]] = None,
            ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> Trace.QueryPlanNode.ParallelNode: ...
            def MergeFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            def CopyFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            if sys.version_info >= (3,):
                def ClearField(
                    self, field_name: typing_extensions___Literal["nodes"]
                ) -> None: ...
            else:
                def ClearField(
                    self, field_name: typing_extensions___Literal[b"nodes"]
                ) -> None: ...

        class FetchNode(google___protobuf___message___Message):
            serviceName = ...  # type: typing___Text
            traceParsingFailed = ...  # type: bool
            sent_time_offset = ...  # type: int
            @property
            def trace(self) -> Trace: ...
            @property
            def sent_time(self) -> google___protobuf___timestamp_pb2___Timestamp: ...
            @property
            def received_time(
                self,
            ) -> google___protobuf___timestamp_pb2___Timestamp: ...
            def __init__(
                self,
                serviceName: typing___Optional[typing___Text] = None,
                traceParsingFailed: typing___Optional[bool] = None,
                trace: typing___Optional[Trace] = None,
                sent_time_offset: typing___Optional[int] = None,
                sent_time: typing___Optional[
                    google___protobuf___timestamp_pb2___Timestamp
                ] = None,
                received_time: typing___Optional[
                    google___protobuf___timestamp_pb2___Timestamp
                ] = None,
            ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> Trace.QueryPlanNode.FetchNode: ...
            def MergeFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            def CopyFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            if sys.version_info >= (3,):
                def HasField(
                    self,
                    field_name: typing_extensions___Literal[
                        "received_time", "sent_time", "trace"
                    ],
                ) -> bool: ...
                def ClearField(
                    self,
                    field_name: typing_extensions___Literal[
                        "received_time",
                        "sent_time",
                        "sent_time_offset",
                        "serviceName",
                        "trace",
                        "traceParsingFailed",
                    ],
                ) -> None: ...
            else:
                def HasField(
                    self,
                    field_name: typing_extensions___Literal[
                        "received_time",
                        b"received_time",
                        "sent_time",
                        b"sent_time",
                        "trace",
                        b"trace",
                    ],
                ) -> bool: ...
                def ClearField(
                    self,
                    field_name: typing_extensions___Literal[
                        b"received_time",
                        b"sent_time",
                        b"sent_time_offset",
                        b"serviceName",
                        b"trace",
                        b"traceParsingFailed",
                    ],
                ) -> None: ...

        class FlattenNode(google___protobuf___message___Message):
            @property
            def response_path(
                self,
            ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
                Trace.QueryPlanNode.ResponsePathElement
            ]: ...
            @property
            def node(self) -> Trace.QueryPlanNode: ...
            def __init__(
                self,
                response_path: typing___Optional[
                    typing___Iterable[Trace.QueryPlanNode.ResponsePathElement]
                ] = None,
                node: typing___Optional[Trace.QueryPlanNode] = None,
            ) -> None: ...
            @classmethod
            def FromString(cls, s: bytes) -> Trace.QueryPlanNode.FlattenNode: ...
            def MergeFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            def CopyFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            if sys.version_info >= (3,):
                def HasField(
                    self, field_name: typing_extensions___Literal["node"]
                ) -> bool: ...
                def ClearField(
                    self,
                    field_name: typing_extensions___Literal["node", "response_path"],
                ) -> None: ...
            else:
                def HasField(
                    self, field_name: typing_extensions___Literal["node", b"node"]
                ) -> bool: ...
                def ClearField(
                    self,
                    field_name: typing_extensions___Literal[b"node", b"response_path"],
                ) -> None: ...

        class ResponsePathElement(google___protobuf___message___Message):
            field_name = ...  # type: typing___Text
            index = ...  # type: int
            def __init__(
                self,
                field_name: typing___Optional[typing___Text] = None,
                index: typing___Optional[int] = None,
            ) -> None: ...
            @classmethod
            def FromString(
                cls, s: bytes
            ) -> Trace.QueryPlanNode.ResponsePathElement: ...
            def MergeFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            def CopyFrom(
                self, other_msg: google___protobuf___message___Message
            ) -> None: ...
            if sys.version_info >= (3,):
                def HasField(
                    self,
                    field_name: typing_extensions___Literal[
                        "field_name", "id", "index"
                    ],
                ) -> bool: ...
                def ClearField(
                    self,
                    field_name: typing_extensions___Literal[
                        "field_name", "id", "index"
                    ],
                ) -> None: ...
            else:
                def HasField(
                    self,
                    field_name: typing_extensions___Literal[
                        "field_name", b"field_name", "id", b"id", "index", b"index"
                    ],
                ) -> bool: ...
                def ClearField(
                    self,
                    field_name: typing_extensions___Literal[
                        b"field_name", b"id", b"index"
                    ],
                ) -> None: ...

            def WhichOneof(
                self, oneof_group: typing_extensions___Literal["id", b"id"]
            ) -> typing_extensions___Literal["field_name", "index"]: ...

        @property
        def sequence(self) -> Trace.QueryPlanNode.SequenceNode: ...
        @property
        def parallel(self) -> Trace.QueryPlanNode.ParallelNode: ...
        @property
        def fetch(self) -> Trace.QueryPlanNode.FetchNode: ...
        @property
        def flatten(self) -> Trace.QueryPlanNode.FlattenNode: ...
        def __init__(
            self,
            sequence: typing___Optional[Trace.QueryPlanNode.SequenceNode] = None,
            parallel: typing___Optional[Trace.QueryPlanNode.ParallelNode] = None,
            fetch: typing___Optional[Trace.QueryPlanNode.FetchNode] = None,
            flatten: typing___Optional[Trace.QueryPlanNode.FlattenNode] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> Trace.QueryPlanNode: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def HasField(
                self,
                field_name: typing_extensions___Literal[
                    "fetch", "flatten", "node", "parallel", "sequence"
                ],
            ) -> bool: ...
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    "fetch", "flatten", "node", "parallel", "sequence"
                ],
            ) -> None: ...
        else:
            def HasField(
                self,
                field_name: typing_extensions___Literal[
                    "fetch",
                    b"fetch",
                    "flatten",
                    b"flatten",
                    "node",
                    b"node",
                    "parallel",
                    b"parallel",
                    "sequence",
                    b"sequence",
                ],
            ) -> bool: ...
            def ClearField(
                self,
                field_name: typing_extensions___Literal[
                    b"fetch", b"flatten", b"node", b"parallel", b"sequence"
                ],
            ) -> None: ...

        def WhichOneof(
            self, oneof_group: typing_extensions___Literal["node", b"node"]
        ) -> typing_extensions___Literal[
            "sequence", "parallel", "fetch", "flatten"
        ]: ...

    duration_ns = ...  # type: int
    signature = ...  # type: typing___Text
    client_name = ...  # type: typing___Text
    client_version = ...  # type: typing___Text
    client_address = ...  # type: typing___Text
    client_reference_id = ...  # type: typing___Text
    full_query_cache_hit = ...  # type: bool
    persisted_query_hit = ...  # type: bool
    persisted_query_register = ...  # type: bool
    registered_operation = ...  # type: bool
    forbidden_operation = ...  # type: bool
    origin_reported_duration_ns = ...  # type: int
    legacy_signature_needs_resigning = ...  # type: typing___Text
    @property
    def start_time(self) -> google___protobuf___timestamp_pb2___Timestamp: ...
    @property
    def end_time(self) -> google___protobuf___timestamp_pb2___Timestamp: ...
    @property
    def root(self) -> Trace.Node: ...
    @property
    def details(self) -> Trace.Details: ...
    @property
    def http(self) -> Trace.HTTP: ...
    @property
    def cache_policy(self) -> Trace.CachePolicy: ...
    @property
    def query_plan(self) -> Trace.QueryPlanNode: ...
    @property
    def origin_reported_start_time(
        self,
    ) -> google___protobuf___timestamp_pb2___Timestamp: ...
    @property
    def origin_reported_end_time(
        self,
    ) -> google___protobuf___timestamp_pb2___Timestamp: ...
    def __init__(
        self,
        start_time: typing___Optional[
            google___protobuf___timestamp_pb2___Timestamp
        ] = None,
        end_time: typing___Optional[
            google___protobuf___timestamp_pb2___Timestamp
        ] = None,
        duration_ns: typing___Optional[int] = None,
        root: typing___Optional[Trace.Node] = None,
        signature: typing___Optional[typing___Text] = None,
        details: typing___Optional[Trace.Details] = None,
        client_name: typing___Optional[typing___Text] = None,
        client_version: typing___Optional[typing___Text] = None,
        client_address: typing___Optional[typing___Text] = None,
        client_reference_id: typing___Optional[typing___Text] = None,
        http: typing___Optional[Trace.HTTP] = None,
        cache_policy: typing___Optional[Trace.CachePolicy] = None,
        query_plan: typing___Optional[Trace.QueryPlanNode] = None,
        full_query_cache_hit: typing___Optional[bool] = None,
        persisted_query_hit: typing___Optional[bool] = None,
        persisted_query_register: typing___Optional[bool] = None,
        registered_operation: typing___Optional[bool] = None,
        forbidden_operation: typing___Optional[bool] = None,
        origin_reported_start_time: typing___Optional[
            google___protobuf___timestamp_pb2___Timestamp
        ] = None,
        origin_reported_end_time: typing___Optional[
            google___protobuf___timestamp_pb2___Timestamp
        ] = None,
        origin_reported_duration_ns: typing___Optional[int] = None,
        legacy_signature_needs_resigning: typing___Optional[typing___Text] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Trace: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "cache_policy",
                "details",
                "end_time",
                "http",
                "origin_reported_end_time",
                "origin_reported_start_time",
                "query_plan",
                "root",
                "start_time",
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "cache_policy",
                "client_address",
                "client_name",
                "client_reference_id",
                "client_version",
                "details",
                "duration_ns",
                "end_time",
                "forbidden_operation",
                "full_query_cache_hit",
                "http",
                "legacy_signature_needs_resigning",
                "origin_reported_duration_ns",
                "origin_reported_end_time",
                "origin_reported_start_time",
                "persisted_query_hit",
                "persisted_query_register",
                "query_plan",
                "registered_operation",
                "root",
                "signature",
                "start_time",
            ],
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "cache_policy",
                b"cache_policy",
                "details",
                b"details",
                "end_time",
                b"end_time",
                "http",
                b"http",
                "origin_reported_end_time",
                b"origin_reported_end_time",
                "origin_reported_start_time",
                b"origin_reported_start_time",
                "query_plan",
                b"query_plan",
                "root",
                b"root",
                "start_time",
                b"start_time",
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"cache_policy",
                b"client_address",
                b"client_name",
                b"client_reference_id",
                b"client_version",
                b"details",
                b"duration_ns",
                b"end_time",
                b"forbidden_operation",
                b"full_query_cache_hit",
                b"http",
                b"legacy_signature_needs_resigning",
                b"origin_reported_duration_ns",
                b"origin_reported_end_time",
                b"origin_reported_start_time",
                b"persisted_query_hit",
                b"persisted_query_register",
                b"query_plan",
                b"registered_operation",
                b"root",
                b"signature",
                b"start_time",
            ],
        ) -> None: ...

class ReportHeader(google___protobuf___message___Message):
    service = ...  # type: typing___Text
    hostname = ...  # type: typing___Text
    agent_version = ...  # type: typing___Text
    service_version = ...  # type: typing___Text
    runtime_version = ...  # type: typing___Text
    uname = ...  # type: typing___Text
    schema_tag = ...  # type: typing___Text
    schema_hash = ...  # type: typing___Text
    def __init__(
        self,
        service: typing___Optional[typing___Text] = None,
        hostname: typing___Optional[typing___Text] = None,
        agent_version: typing___Optional[typing___Text] = None,
        service_version: typing___Optional[typing___Text] = None,
        runtime_version: typing___Optional[typing___Text] = None,
        uname: typing___Optional[typing___Text] = None,
        schema_tag: typing___Optional[typing___Text] = None,
        schema_hash: typing___Optional[typing___Text] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ReportHeader: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "agent_version",
                "hostname",
                "runtime_version",
                "schema_hash",
                "schema_tag",
                "service",
                "service_version",
                "uname",
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"agent_version",
                b"hostname",
                b"runtime_version",
                b"schema_hash",
                b"schema_tag",
                b"service",
                b"service_version",
                b"uname",
            ],
        ) -> None: ...

class PathErrorStats(google___protobuf___message___Message):
    class ChildrenEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        @property
        def value(self) -> PathErrorStats: ...
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[PathErrorStats] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> PathErrorStats.ChildrenEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def HasField(
                self, field_name: typing_extensions___Literal["value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def HasField(
                self, field_name: typing_extensions___Literal["value", b"value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    errors_count = ...  # type: int
    requests_with_errors_count = ...  # type: int
    @property
    def children(self) -> typing___MutableMapping[typing___Text, PathErrorStats]: ...
    def __init__(
        self,
        children: typing___Optional[
            typing___Mapping[typing___Text, PathErrorStats]
        ] = None,
        errors_count: typing___Optional[int] = None,
        requests_with_errors_count: typing___Optional[int] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> PathErrorStats: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "children", "errors_count", "requests_with_errors_count"
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"children", b"errors_count", b"requests_with_errors_count"
            ],
        ) -> None: ...

class ClientNameStats(google___protobuf___message___Message):
    class RequestsCountPerVersionEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        value = ...  # type: int
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[int] = None,
        ) -> None: ...
        @classmethod
        def FromString(
            cls, s: bytes
        ) -> ClientNameStats.RequestsCountPerVersionEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    class CacheHitsPerVersionEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        value = ...  # type: int
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[int] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> ClientNameStats.CacheHitsPerVersionEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    class PersistedQueryHitsPerVersionEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        value = ...  # type: int
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[int] = None,
        ) -> None: ...
        @classmethod
        def FromString(
            cls, s: bytes
        ) -> ClientNameStats.PersistedQueryHitsPerVersionEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    class PersistedQueryMissesPerVersionEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        value = ...  # type: int
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[int] = None,
        ) -> None: ...
        @classmethod
        def FromString(
            cls, s: bytes
        ) -> ClientNameStats.PersistedQueryMissesPerVersionEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    class RegisteredOperationCountPerVersionEntry(
        google___protobuf___message___Message
    ):
        key = ...  # type: typing___Text
        value = ...  # type: int
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[int] = None,
        ) -> None: ...
        @classmethod
        def FromString(
            cls, s: bytes
        ) -> ClientNameStats.RegisteredOperationCountPerVersionEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    class ForbiddenOperationCountPerVersionEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        value = ...  # type: int
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[int] = None,
        ) -> None: ...
        @classmethod
        def FromString(
            cls, s: bytes
        ) -> ClientNameStats.ForbiddenOperationCountPerVersionEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    latency_count = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    cache_latency_count = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    requests_with_errors_count = ...  # type: int
    public_cache_ttl_count = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    private_cache_ttl_count = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    @property
    def requests_count_per_version(
        self,
    ) -> typing___MutableMapping[typing___Text, int]: ...
    @property
    def cache_hits_per_version(self) -> typing___MutableMapping[typing___Text, int]: ...
    @property
    def persisted_query_hits_per_version(
        self,
    ) -> typing___MutableMapping[typing___Text, int]: ...
    @property
    def persisted_query_misses_per_version(
        self,
    ) -> typing___MutableMapping[typing___Text, int]: ...
    @property
    def registered_operation_count_per_version(
        self,
    ) -> typing___MutableMapping[typing___Text, int]: ...
    @property
    def forbidden_operation_count_per_version(
        self,
    ) -> typing___MutableMapping[typing___Text, int]: ...
    @property
    def root_error_stats(self) -> PathErrorStats: ...
    def __init__(
        self,
        latency_count: typing___Optional[typing___Iterable[int]] = None,
        requests_count_per_version: typing___Optional[
            typing___Mapping[typing___Text, int]
        ] = None,
        cache_hits_per_version: typing___Optional[
            typing___Mapping[typing___Text, int]
        ] = None,
        persisted_query_hits_per_version: typing___Optional[
            typing___Mapping[typing___Text, int]
        ] = None,
        persisted_query_misses_per_version: typing___Optional[
            typing___Mapping[typing___Text, int]
        ] = None,
        registered_operation_count_per_version: typing___Optional[
            typing___Mapping[typing___Text, int]
        ] = None,
        forbidden_operation_count_per_version: typing___Optional[
            typing___Mapping[typing___Text, int]
        ] = None,
        cache_latency_count: typing___Optional[typing___Iterable[int]] = None,
        root_error_stats: typing___Optional[PathErrorStats] = None,
        requests_with_errors_count: typing___Optional[int] = None,
        public_cache_ttl_count: typing___Optional[typing___Iterable[int]] = None,
        private_cache_ttl_count: typing___Optional[typing___Iterable[int]] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ClientNameStats: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self, field_name: typing_extensions___Literal["root_error_stats"]
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "cache_hits_per_version",
                "cache_latency_count",
                "forbidden_operation_count_per_version",
                "latency_count",
                "persisted_query_hits_per_version",
                "persisted_query_misses_per_version",
                "private_cache_ttl_count",
                "public_cache_ttl_count",
                "registered_operation_count_per_version",
                "requests_count_per_version",
                "requests_with_errors_count",
                "root_error_stats",
            ],
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "root_error_stats", b"root_error_stats"
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"cache_hits_per_version",
                b"cache_latency_count",
                b"forbidden_operation_count_per_version",
                b"latency_count",
                b"persisted_query_hits_per_version",
                b"persisted_query_misses_per_version",
                b"private_cache_ttl_count",
                b"public_cache_ttl_count",
                b"registered_operation_count_per_version",
                b"requests_count_per_version",
                b"requests_with_errors_count",
                b"root_error_stats",
            ],
        ) -> None: ...

class QueryLatencyStats(google___protobuf___message___Message):
    latency_count = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    request_count = ...  # type: int
    cache_hits = ...  # type: int
    persisted_query_hits = ...  # type: int
    persisted_query_misses = ...  # type: int
    cache_latency_count = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    requests_with_errors_count = ...  # type: int
    public_cache_ttl_count = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    private_cache_ttl_count = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    registered_operation_count = ...  # type: int
    forbidden_operation_count = ...  # type: int
    @property
    def root_error_stats(self) -> PathErrorStats: ...
    def __init__(
        self,
        latency_count: typing___Optional[typing___Iterable[int]] = None,
        request_count: typing___Optional[int] = None,
        cache_hits: typing___Optional[int] = None,
        persisted_query_hits: typing___Optional[int] = None,
        persisted_query_misses: typing___Optional[int] = None,
        cache_latency_count: typing___Optional[typing___Iterable[int]] = None,
        root_error_stats: typing___Optional[PathErrorStats] = None,
        requests_with_errors_count: typing___Optional[int] = None,
        public_cache_ttl_count: typing___Optional[typing___Iterable[int]] = None,
        private_cache_ttl_count: typing___Optional[typing___Iterable[int]] = None,
        registered_operation_count: typing___Optional[int] = None,
        forbidden_operation_count: typing___Optional[int] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> QueryLatencyStats: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self, field_name: typing_extensions___Literal["root_error_stats"]
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "cache_hits",
                "cache_latency_count",
                "forbidden_operation_count",
                "latency_count",
                "persisted_query_hits",
                "persisted_query_misses",
                "private_cache_ttl_count",
                "public_cache_ttl_count",
                "registered_operation_count",
                "request_count",
                "requests_with_errors_count",
                "root_error_stats",
            ],
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "root_error_stats", b"root_error_stats"
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"cache_hits",
                b"cache_latency_count",
                b"forbidden_operation_count",
                b"latency_count",
                b"persisted_query_hits",
                b"persisted_query_misses",
                b"private_cache_ttl_count",
                b"public_cache_ttl_count",
                b"registered_operation_count",
                b"request_count",
                b"requests_with_errors_count",
                b"root_error_stats",
            ],
        ) -> None: ...

class StatsContext(google___protobuf___message___Message):
    client_reference_id = ...  # type: typing___Text
    client_name = ...  # type: typing___Text
    client_version = ...  # type: typing___Text
    def __init__(
        self,
        client_reference_id: typing___Optional[typing___Text] = None,
        client_name: typing___Optional[typing___Text] = None,
        client_version: typing___Optional[typing___Text] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> StatsContext: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "client_name", "client_reference_id", "client_version"
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"client_name", b"client_reference_id", b"client_version"
            ],
        ) -> None: ...

class ContextualizedQueryLatencyStats(google___protobuf___message___Message):
    @property
    def query_latency_stats(self) -> QueryLatencyStats: ...
    @property
    def context(self) -> StatsContext: ...
    def __init__(
        self,
        query_latency_stats: typing___Optional[QueryLatencyStats] = None,
        context: typing___Optional[StatsContext] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ContextualizedQueryLatencyStats: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self,
            field_name: typing_extensions___Literal["context", "query_latency_stats"],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal["context", "query_latency_stats"],
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "context", b"context", "query_latency_stats", b"query_latency_stats"
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[b"context", b"query_latency_stats"],
        ) -> None: ...

class ContextualizedTypeStats(google___protobuf___message___Message):
    class PerTypeStatEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        @property
        def value(self) -> TypeStat: ...
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[TypeStat] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> ContextualizedTypeStats.PerTypeStatEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def HasField(
                self, field_name: typing_extensions___Literal["value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def HasField(
                self, field_name: typing_extensions___Literal["value", b"value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    @property
    def context(self) -> StatsContext: ...
    @property
    def per_type_stat(self) -> typing___MutableMapping[typing___Text, TypeStat]: ...
    def __init__(
        self,
        context: typing___Optional[StatsContext] = None,
        per_type_stat: typing___Optional[
            typing___Mapping[typing___Text, TypeStat]
        ] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ContextualizedTypeStats: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self, field_name: typing_extensions___Literal["context"]
        ) -> bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["context", "per_type_stat"]
        ) -> None: ...
    else:
        def HasField(
            self, field_name: typing_extensions___Literal["context", b"context"]
        ) -> bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal[b"context", b"per_type_stat"]
        ) -> None: ...

class FieldStat(google___protobuf___message___Message):
    name = ...  # type: typing___Text
    return_type = ...  # type: typing___Text
    errors_count = ...  # type: int
    count = ...  # type: int
    requests_with_errors_count = ...  # type: int
    latency_count = (
        ...
    )  # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[int]
    def __init__(
        self,
        name: typing___Optional[typing___Text] = None,
        return_type: typing___Optional[typing___Text] = None,
        errors_count: typing___Optional[int] = None,
        count: typing___Optional[int] = None,
        requests_with_errors_count: typing___Optional[int] = None,
        latency_count: typing___Optional[typing___Iterable[int]] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FieldStat: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "count",
                "errors_count",
                "latency_count",
                "name",
                "requests_with_errors_count",
                "return_type",
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"count",
                b"errors_count",
                b"latency_count",
                b"name",
                b"requests_with_errors_count",
                b"return_type",
            ],
        ) -> None: ...

class TypeStat(google___protobuf___message___Message):
    class PerFieldStatEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        @property
        def value(self) -> FieldStat: ...
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[FieldStat] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> TypeStat.PerFieldStatEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def HasField(
                self, field_name: typing_extensions___Literal["value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def HasField(
                self, field_name: typing_extensions___Literal["value", b"value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    name = ...  # type: typing___Text
    @property
    def field(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        FieldStat
    ]: ...
    @property
    def per_field_stat(self) -> typing___MutableMapping[typing___Text, FieldStat]: ...
    def __init__(
        self,
        name: typing___Optional[typing___Text] = None,
        field: typing___Optional[typing___Iterable[FieldStat]] = None,
        per_field_stat: typing___Optional[
            typing___Mapping[typing___Text, FieldStat]
        ] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> TypeStat: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal["field", "name", "per_field_stat"],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"field", b"name", b"per_field_stat"
            ],
        ) -> None: ...

class QueryStats(google___protobuf___message___Message):
    class PerClientNameEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        @property
        def value(self) -> ClientNameStats: ...
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[ClientNameStats] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> QueryStats.PerClientNameEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def HasField(
                self, field_name: typing_extensions___Literal["value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def HasField(
                self, field_name: typing_extensions___Literal["value", b"value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    class PerTypeStatEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        @property
        def value(self) -> TypeStat: ...
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[TypeStat] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> QueryStats.PerTypeStatEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def HasField(
                self, field_name: typing_extensions___Literal["value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def HasField(
                self, field_name: typing_extensions___Literal["value", b"value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    @property
    def per_client_name(
        self,
    ) -> typing___MutableMapping[typing___Text, ClientNameStats]: ...
    @property
    def query_stats_with_context(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        ContextualizedQueryLatencyStats
    ]: ...
    @property
    def per_type(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        TypeStat
    ]: ...
    @property
    def per_type_stat(self) -> typing___MutableMapping[typing___Text, TypeStat]: ...
    @property
    def type_stats_with_context(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        ContextualizedTypeStats
    ]: ...
    def __init__(
        self,
        per_client_name: typing___Optional[
            typing___Mapping[typing___Text, ClientNameStats]
        ] = None,
        query_stats_with_context: typing___Optional[
            typing___Iterable[ContextualizedQueryLatencyStats]
        ] = None,
        per_type: typing___Optional[typing___Iterable[TypeStat]] = None,
        per_type_stat: typing___Optional[
            typing___Mapping[typing___Text, TypeStat]
        ] = None,
        type_stats_with_context: typing___Optional[
            typing___Iterable[ContextualizedTypeStats]
        ] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> QueryStats: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "per_client_name",
                "per_type",
                "per_type_stat",
                "query_stats_with_context",
                "type_stats_with_context",
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"per_client_name",
                b"per_type",
                b"per_type_stat",
                b"query_stats_with_context",
                b"type_stats_with_context",
            ],
        ) -> None: ...

class TracesReport(google___protobuf___message___Message):
    @property
    def header(self) -> ReportHeader: ...
    @property
    def trace(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        Trace
    ]: ...
    def __init__(
        self,
        header: typing___Optional[ReportHeader] = None,
        trace: typing___Optional[typing___Iterable[Trace]] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> TracesReport: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self, field_name: typing_extensions___Literal["header"]
        ) -> bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["header", "trace"]
        ) -> None: ...
    else:
        def HasField(
            self, field_name: typing_extensions___Literal["header", b"header"]
        ) -> bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal[b"header", b"trace"]
        ) -> None: ...

class Field(google___protobuf___message___Message):
    name = ...  # type: typing___Text
    return_type = ...  # type: typing___Text
    def __init__(
        self,
        name: typing___Optional[typing___Text] = None,
        return_type: typing___Optional[typing___Text] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Field: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self, field_name: typing_extensions___Literal["name", "return_type"]
        ) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal[b"name", b"return_type"]
        ) -> None: ...

class Type(google___protobuf___message___Message):
    name = ...  # type: typing___Text
    @property
    def field(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        Field
    ]: ...
    def __init__(
        self,
        name: typing___Optional[typing___Text] = None,
        field: typing___Optional[typing___Iterable[Field]] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Type: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self, field_name: typing_extensions___Literal["field", "name"]
        ) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal[b"field", b"name"]
        ) -> None: ...

class MemStats(google___protobuf___message___Message):
    total_bytes = ...  # type: int
    stack_bytes = ...  # type: int
    heap_bytes = ...  # type: int
    heap_released_bytes = ...  # type: int
    gc_overhead_bytes = ...  # type: int
    stack_used_bytes = ...  # type: int
    heap_allocated_bytes = ...  # type: int
    heap_allocated_objects = ...  # type: int
    heap_allocated_bytes_delta = ...  # type: int
    heap_allocated_objects_delta = ...  # type: int
    heap_freed_objects_delta = ...  # type: int
    gc_stw_ns_delta = ...  # type: int
    gc_count_delta = ...  # type: int
    def __init__(
        self,
        total_bytes: typing___Optional[int] = None,
        stack_bytes: typing___Optional[int] = None,
        heap_bytes: typing___Optional[int] = None,
        heap_released_bytes: typing___Optional[int] = None,
        gc_overhead_bytes: typing___Optional[int] = None,
        stack_used_bytes: typing___Optional[int] = None,
        heap_allocated_bytes: typing___Optional[int] = None,
        heap_allocated_objects: typing___Optional[int] = None,
        heap_allocated_bytes_delta: typing___Optional[int] = None,
        heap_allocated_objects_delta: typing___Optional[int] = None,
        heap_freed_objects_delta: typing___Optional[int] = None,
        gc_stw_ns_delta: typing___Optional[int] = None,
        gc_count_delta: typing___Optional[int] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> MemStats: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "gc_count_delta",
                "gc_overhead_bytes",
                "gc_stw_ns_delta",
                "heap_allocated_bytes",
                "heap_allocated_bytes_delta",
                "heap_allocated_objects",
                "heap_allocated_objects_delta",
                "heap_bytes",
                "heap_freed_objects_delta",
                "heap_released_bytes",
                "stack_bytes",
                "stack_used_bytes",
                "total_bytes",
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"gc_count_delta",
                b"gc_overhead_bytes",
                b"gc_stw_ns_delta",
                b"heap_allocated_bytes",
                b"heap_allocated_bytes_delta",
                b"heap_allocated_objects",
                b"heap_allocated_objects_delta",
                b"heap_bytes",
                b"heap_freed_objects_delta",
                b"heap_released_bytes",
                b"stack_bytes",
                b"stack_used_bytes",
                b"total_bytes",
            ],
        ) -> None: ...

class TimeStats(google___protobuf___message___Message):
    uptime_ns = ...  # type: int
    real_ns_delta = ...  # type: int
    user_ns_delta = ...  # type: int
    sys_ns_delta = ...  # type: int
    def __init__(
        self,
        uptime_ns: typing___Optional[int] = None,
        real_ns_delta: typing___Optional[int] = None,
        user_ns_delta: typing___Optional[int] = None,
        sys_ns_delta: typing___Optional[int] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> TimeStats: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "real_ns_delta", "sys_ns_delta", "uptime_ns", "user_ns_delta"
            ],
        ) -> None: ...
    else:
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"real_ns_delta", b"sys_ns_delta", b"uptime_ns", b"user_ns_delta"
            ],
        ) -> None: ...

class StatsReport(google___protobuf___message___Message):
    class PerQueryEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        @property
        def value(self) -> QueryStats: ...
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[QueryStats] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> StatsReport.PerQueryEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def HasField(
                self, field_name: typing_extensions___Literal["value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def HasField(
                self, field_name: typing_extensions___Literal["value", b"value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    class LegacyPerQueryImplicitOperationNameEntry(
        google___protobuf___message___Message
    ):
        key = ...  # type: typing___Text
        @property
        def value(self) -> QueryStats: ...
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[QueryStats] = None,
        ) -> None: ...
        @classmethod
        def FromString(
            cls, s: bytes
        ) -> StatsReport.LegacyPerQueryImplicitOperationNameEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def HasField(
                self, field_name: typing_extensions___Literal["value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def HasField(
                self, field_name: typing_extensions___Literal["value", b"value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    realtime_duration = ...  # type: int
    @property
    def header(self) -> ReportHeader: ...
    @property
    def mem_stats(self) -> MemStats: ...
    @property
    def time_stats(self) -> TimeStats: ...
    @property
    def start_time(self) -> google___protobuf___timestamp_pb2___Timestamp: ...
    @property
    def end_time(self) -> google___protobuf___timestamp_pb2___Timestamp: ...
    @property
    def per_query(self) -> typing___MutableMapping[typing___Text, QueryStats]: ...
    @property
    def legacy_per_query_implicit_operation_name(
        self,
    ) -> typing___MutableMapping[typing___Text, QueryStats]: ...
    @property
    def type(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        Type
    ]: ...
    def __init__(
        self,
        header: typing___Optional[ReportHeader] = None,
        mem_stats: typing___Optional[MemStats] = None,
        time_stats: typing___Optional[TimeStats] = None,
        start_time: typing___Optional[
            google___protobuf___timestamp_pb2___Timestamp
        ] = None,
        end_time: typing___Optional[
            google___protobuf___timestamp_pb2___Timestamp
        ] = None,
        realtime_duration: typing___Optional[int] = None,
        per_query: typing___Optional[
            typing___Mapping[typing___Text, QueryStats]
        ] = None,
        legacy_per_query_implicit_operation_name: typing___Optional[
            typing___Mapping[typing___Text, QueryStats]
        ] = None,
        type: typing___Optional[typing___Iterable[Type]] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> StatsReport: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "end_time", "header", "mem_stats", "start_time", "time_stats"
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                "end_time",
                "header",
                "legacy_per_query_implicit_operation_name",
                "mem_stats",
                "per_query",
                "realtime_duration",
                "start_time",
                "time_stats",
                "type",
            ],
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "end_time",
                b"end_time",
                "header",
                b"header",
                "mem_stats",
                b"mem_stats",
                "start_time",
                b"start_time",
                "time_stats",
                b"time_stats",
            ],
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[
                b"end_time",
                b"header",
                b"legacy_per_query_implicit_operation_name",
                b"mem_stats",
                b"per_query",
                b"realtime_duration",
                b"start_time",
                b"time_stats",
                b"type",
            ],
        ) -> None: ...

class FullTracesReport(google___protobuf___message___Message):
    class TracesPerQueryEntry(google___protobuf___message___Message):
        key = ...  # type: typing___Text
        @property
        def value(self) -> Traces: ...
        def __init__(
            self,
            key: typing___Optional[typing___Text] = None,
            value: typing___Optional[Traces] = None,
        ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> FullTracesReport.TracesPerQueryEntry: ...
        def MergeFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        def CopyFrom(
            self, other_msg: google___protobuf___message___Message
        ) -> None: ...
        if sys.version_info >= (3,):
            def HasField(
                self, field_name: typing_extensions___Literal["value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal["key", "value"]
            ) -> None: ...
        else:
            def HasField(
                self, field_name: typing_extensions___Literal["value", b"value"]
            ) -> bool: ...
            def ClearField(
                self, field_name: typing_extensions___Literal[b"key", b"value"]
            ) -> None: ...

    @property
    def header(self) -> ReportHeader: ...
    @property
    def traces_per_query(self) -> typing___MutableMapping[typing___Text, Traces]: ...
    def __init__(
        self,
        header: typing___Optional[ReportHeader] = None,
        traces_per_query: typing___Optional[
            typing___Mapping[typing___Text, Traces]
        ] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> FullTracesReport: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self, field_name: typing_extensions___Literal["header"]
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal["header", "traces_per_query"],
        ) -> None: ...
    else:
        def HasField(
            self, field_name: typing_extensions___Literal["header", b"header"]
        ) -> bool: ...
        def ClearField(
            self,
            field_name: typing_extensions___Literal[b"header", b"traces_per_query"],
        ) -> None: ...

class Traces(google___protobuf___message___Message):
    @property
    def trace(
        self,
    ) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[
        Trace
    ]: ...
    def __init__(
        self,
        trace: typing___Optional[typing___Iterable[Trace]] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Traces: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(
            self, field_name: typing_extensions___Literal["trace"]
        ) -> None: ...
    else:
        def ClearField(
            self, field_name: typing_extensions___Literal[b"trace"]
        ) -> None: ...

class TraceV1(google___protobuf___message___Message):
    @property
    def header(self) -> ReportHeader: ...
    @property
    def trace(self) -> Trace: ...
    def __init__(
        self,
        header: typing___Optional[ReportHeader] = None,
        trace: typing___Optional[Trace] = None,
    ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> TraceV1: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(
            self, field_name: typing_extensions___Literal["header", "trace"]
        ) -> bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal["header", "trace"]
        ) -> None: ...
    else:
        def HasField(
            self,
            field_name: typing_extensions___Literal[
                "header", b"header", "trace", b"trace"
            ],
        ) -> bool: ...
        def ClearField(
            self, field_name: typing_extensions___Literal[b"header", b"trace"]
        ) -> None: ...
